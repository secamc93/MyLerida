basePath: /api
definitions:
  globalerrors.BaseResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  handlers.ModulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/permissionsdtos.ModuleDTO'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  permissionsdtos.ModuleDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  request.CreateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.UpdateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  request.UserRequest:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  request.UserUpdateRequest:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
    type: object
  response.BaseResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  response.LoginResponse:
    properties:
      access_token:
        type: string
      user_id:
        type: integer
      user_last_name:
        type: string
      user_name:
        type: string
    type: object
  response.Module:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  response.Permission:
    properties:
      delete:
        type: boolean
      id:
        type: integer
      module:
        $ref: '#/definitions/response.Module'
      read:
        type: boolean
      update:
        type: boolean
      write:
        type: boolean
    type: object
  response.PermissionResponse:
    properties:
      businesses_id:
        type: integer
      businesses_name:
        type: string
      delete:
        type: boolean
      read:
        type: boolean
      role:
        type: string
      role_id:
        type: integer
      update:
        type: boolean
      user_id:
        type: integer
      user_name:
        type: string
      write:
        type: boolean
    type: object
  response.RoleListResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/response.RoleResponse'
        type: array
    type: object
  response.RoleResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/response.Permission'
        type: array
    type: object
  response.UserResponse:
    properties:
      id:
        type: integer
      last_name:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: Documentación de la API de AUTH.
  version: "1.0"
paths:
  /permission:
    get:
      consumes:
      - application/json
      description: Extracts the business ID and user ID from the request headers,
        then fetches associated permissions.
      parameters:
      - description: Business ID
        in: header
        name: businesses_id
        required: true
        type: string
      - description: User ID
        in: header
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of permissions
          schema:
            items:
              $ref: '#/definitions/response.PermissionResponse'
            type: array
        "400":
          description: Header conversion error or missing required header
          schema:
            $ref: '#/definitions/globalerrors.BaseResponse'
        "500":
          description: Error retrieving permissions
          schema:
            $ref: '#/definitions/globalerrors.BaseResponse'
      summary: Retrieve permissions for a business and user
      tags:
      - Permissions
  /permissions/modules:
    get:
      description: Retorna un listado de módulos envuelto en un objeto de respuesta
        estándar
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ModulesResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todos los módulos
      tags:
      - Modulos
  /roles:
    get:
      consumes:
      - application/json
      description: Obtiene una lista de todos los roles disponibles en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: Lista de roles
          schema:
            $ref: '#/definitions/response.RoleListResponse'
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Listar todos los roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Crea un nuevo rol en el sistema
      parameters:
      - description: Datos del rol
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Rol creado
          schema:
            $ref: '#/definitions/response.RoleResponse'
        "400":
          description: Error en los datos de solicitud
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Ya existe un rol con ese nombre
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Crear un nuevo rol
      tags:
      - roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un rol específico por su ID
      parameters:
      - description: ID del rol
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Mensaje de éxito
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID de rol inválido
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Rol no encontrado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Eliminar un rol
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Obtiene la información de un rol específico por su ID
      parameters:
      - description: ID del rol
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Información del rol
          schema:
            $ref: '#/definitions/response.RoleResponse'
        "400":
          description: ID de rol inválido
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Rol no encontrado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener un rol por ID
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Actualiza la información de un rol existente
      parameters:
      - description: ID del rol
        in: path
        name: id
        required: true
        type: integer
      - description: Datos actualizados del rol
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Rol actualizado
          schema:
            $ref: '#/definitions/response.RoleResponse'
        "400":
          description: Datos de solicitud inválidos
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Rol no encontrado
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Ya existe un rol con ese nombre
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Actualizar un rol
      tags:
      - roles
  /users:
    get:
      consumes:
      - application/json
      description: Devuelve una lista de todos los usuarios registrados
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Obtiene la lista de usuarios
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      description: Elimina un usuario por su ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Elimina un usuario
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Devuelve un usuario específico basado en su ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Obtiene un usuario por su ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un usuario por su ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Actualiza un usuario
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns an access token
      parameters:
      - description: Login request payload
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Login
      tags:
      - Login
swagger: "2.0"
